{"version":3,"sources":["images/logo.png","components/Header.js","components/Emoji.js","components/CharacterCard.js","components/CharacterList.js","components/Filter.js","components/CharacterDetail.js","components/App.js","services/FetchData.js","index.js"],"names":["module","exports","Header","className","to","src","logo","alt","Emoji","props","role","aria-label","label","aria-hidden","symbol","CharacterCard","image","name","species","CharacterList","dataList","inputValue","error","length","sort","a","b","map","charObj","key","id","Filter","onSubmit","event","preventDefault","htmlFor","type","placeholder","value","onChange","newValue","currentTarget","handleInputValue","CharacterDetail","undefined","selectedCharacter","Fragment","origin","episode","status","App","bind","renderCharacterDetail","applyFilter","state","data","isExisting","localStorage","setItem","JSON","stringify","this","fetch","then","response","json","setState","results","infoValue","parse","getItem","urlId","match","params","characters","character","parseInt","object","filter","toLowerCase","includes","exact","path","render","React","Component","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.221e5593.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.75509f2e.png\";","import React from 'react';\nimport logo from '../images/logo.png';\nimport { Link } from 'react-router-dom';\n\n\nconst Header = () => {\n   return(\n      <header className=\"header\">\n         <Link to=\"/\">\n            <div className=\"logo-container\">\n               <img className=\"logo\" src={logo} alt=\"Rick and Morty logo\"/>\n            </div>\n         </Link>\n      </header>\n   )\n}\n\nexport default Header;","import React from 'react';\n\nconst Emoji = (props) => (\n    <span\n        className=\"emoji\"\n        role=\"img\"\n        aria-label={props.label ? props.label : \"\"}\n        aria-hidden={props.label ? \"false\" : \"true\"}\n    >\n        {props.symbol}\n    </span>\n);\n\nexport default Emoji;","import React from 'react';\nimport Emoji from './Emoji';\nimport PropTypes from 'prop-types';\n\nconst CharacterCard = (props) => {\n   return (\n      <div className=\"character\">\n         <div className=\"img-container\">\n            <img src={props.image} alt={props.name}/>\n         </div>\n         <h3>{props.name}</h3>\n         <p>{props.species=== \"Alien\" ? <Emoji symbol=\" 👽 \" label=\"alien\"/> : <Emoji symbol=\" 👫 \" label=\"human\"/>}</p>\n      </div>\n   )\n};\n\nCharacterCard.propTypes = {\n   name: PropTypes.string,\n   image: PropTypes.string,\n   species: PropTypes.string,\n}\n\nexport default CharacterCard;","import React from 'react';\nimport CharacterCard from './CharacterCard';\nimport { Link } from 'react-router-dom';\nimport Emoji from './Emoji';\nimport PropTypes from 'prop-types';\n\nconst CharacterList = (props) => {\n\n   const {dataList,inputValue} = props;\n   const error =  !dataList.length ? <h2 className=\"alert\">Opps!! There is no character named <span>{inputValue}</span> in this universe!<Emoji symbol=\" 🙅‍♂️ \" label=\"abort-mission\"/></h2> : \"\";\n\n   return (\n      <div className=\"list-container\">\n         {error}\n         <ul className=\"character-list\">\n\n         {dataList\n            .sort((a,b) =>{\n               if (a.name< b.name) {return -1}\n               if (a.name> b.name) {return 1}\n               return 0\n            })\n            .map(charObj => <li className=\"character-elem\" key={charObj.id}>\n               <Link className=\"link\" to={`/character/${charObj.id}`}>\n                  <CharacterCard\n                     key={charObj.id}\n                     image={charObj.image}\n                     name={charObj.name}\n                     species={charObj.species}\n                  />\n               </Link>\n               </li>\n            )}\n         </ul>\n      </div>\n   )\n}\n\nCharacterList.propTypes = {\n   image: PropTypes.string,\n   name: PropTypes.string,\n   species: PropTypes.string,\n   inputValue: PropTypes.string,\n   dataList: PropTypes.array\n}\n\nexport default CharacterList;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filter = (props) => {\n\n   const getInputValue = (event) => {\n      const newValue = event.currentTarget.value;\n      props.handleInputValue(newValue)\n   }\n\n   const preventDefault = (event) => event.preventDefault();\n\n   return (\n\n      <div className=\"filter-container\">\n         <form onSubmit={preventDefault}>\n            <label htmlFor=\"name\">Browse your character:</label>\n            <input id=\"name\"\n                  type=\"text\" \n                  name=\"name\"\n                  placeholder=\"Ej.Morty\"\n                  value={props.inputValue}\n                  onChange={getInputValue}\n            />\n         </form>\n      </div>\n   )\n}\n\nFilter.propTypes = {\n   inputValue: PropTypes.string\n}\n\nexport default Filter;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Emoji from './Emoji';\nimport PropTypes from 'prop-types';\n\nconst CharacterDetail = (props) => {\n\n   if (props.selectedCharacter === undefined) {\n      return(\n         <div className=\"not-found\">\n            <p>There is nothing here. Go back home, please:</p>\n         </div>\n      )\n  } else {\n      \n      return (\n      <React.Fragment>\n      <div className=\"button-container\">\n         <Link to=\"/\">\n            <button>Back</button>\n         </Link>\n      </div>\n      <div className=\"detail-container\">\n         <img src={props.selectedCharacter.image} alt={props.selectedCharacter.name}></img>\n         <h2>{props.selectedCharacter.name}</h2>\n         <p>Species:  \n            {props.selectedCharacter.species === \"Alien\" ? <Emoji symbol=\" 👽 \" label=\"alien\"/> : <Emoji symbol=\" 👫 \" label=\"human\"/>}\n         </p>\n         <p>Origin: {props.selectedCharacter.origin.name}</p>\n         <p>Episodes: {props.selectedCharacter.episode.length}</p>\n         <p>Status: \n            {props.selectedCharacter.status === \"Alive\" ? <Emoji symbol=\" 💓 \" label=\"alive\"/> : <Emoji symbol=\" ⚰️ \" label=\"dead\"/>}\n         </p>\n      </div>\n      </React.Fragment>\n      )\n   }\n};\n\nCharacterDetail.propTypes = {\n   image: PropTypes.string,\n   name: PropTypes.string,\n   species: PropTypes.string,\n   status: PropTypes.string,\n   origin: PropTypes.string,\n   episode: PropTypes.array,\n}\n\nexport default CharacterDetail;","import React from 'react';\nimport '../stylesheets/App.scss';\nimport Header from './Header';\nimport { fetchCharacters } from '../services/FetchData';\nimport CharacterList from './CharacterList';\nimport Filter from './Filter';\nimport { Switch,Route } from 'react-router-dom';\nimport CharacterDetail from './CharacterDetail';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputValue=this.handleInputValue.bind(this)\n    this.renderCharacterDetail=this.renderCharacterDetail.bind(this)\n    this.applyFilter=this.applyFilter.bind(this);\n\n    this.state={\n      data:[],\n      inputValue:'',\n      isExisting:true\n    }\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('infoValue', JSON.stringify(this.state.inputValue))\n  }\n\n  componentDidMount() {\n    fetchCharacters()\n      .then(data => {\n        this.setState({\n          data:data.results\n        })\n      })\n    const infoValue = JSON.parse(localStorage.getItem('infoValue'))\n      if (infoValue !== null) {\n        this.setState({\n          inputValue: infoValue\n        })\n      }\n  }\n\n  handleInputValue(value) {\n    this.setState({\n      inputValue: value\n    });\n  };\n\n\n  renderCharacterDetail(props) {\n    const urlId = props.match.params.id;\n    const characters = this.state.data;\n\n    for(let character of characters) {\n      if(character.id === parseInt(urlId)) {\n\n        return <CharacterDetail selectedCharacter={character}/>\n      }\n    }\n  }\n\n  applyFilter() {\n    const object = this.state.data;\n    const inputValue = this.state.inputValue;\n      return object\n      .filter(charObj => inputValue === '' || charObj.name.toLowerCase().includes(inputValue))   \n  }\n\n  render() {\n\n    const {inputValue} = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"wrapper\">\n          <Header/>\n          <main>\n            <Switch>\n              <Route exact path=\"/\">\n                <Filter inputValue={inputValue} handleInputValue={this.handleInputValue}/>\n                <CharacterList dataList={this.applyFilter()} inputValue={inputValue}/>\n              </Route>2\n              <Route path=\"/character/:id\" render={this.renderCharacterDetail}/>\n            </Switch>\n          </main>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const ENDPOINT = 'https://rickandmortyapi.com/api/character/';\n\nconst fetchCharacters = () => fetch(ENDPOINT).then(response => response.json());\n\nexport {fetchCharacters};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}